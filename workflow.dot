digraph Workflow {
  compound=true;
  node [style=rounded, shape=box];

  subgraph cluster_info {
    label=Info;

    "getsockopt(TLS_OPT_SELF_NAME)" [style="rounded,filled"];
    "getsockopt(TLS_OPT_SELF_CERT)" [style="rounded,filled"];
    "getsockopt(TLS_OPT_PEER_NAME)" [style="rounded,filled"];
    "getsockopt(TLS_OPT_PEER_CERT)" [style="rounded,filled"];

    "getsockopt(TLS_OPT_SELF_NAME)" -> "getsockopt(TLS_OPT_SELF_CERT)" [style=invis];
    "getsockopt(TLS_OPT_PEER_NAME)" -> "getsockopt(TLS_OPT_PEER_CERT)" [style=invis];
  }

  subgraph cluster_io {
    label=IO;
    "write()";
    "send()";
    "recv()";
    "read()";
  }

  subgraph cluster_srv {
    label=Server;

    srv_self_cert [label="setsockopt(TLS_OPT_SELF_CERT)"];
    srv_peer_name [label="setsockopt(TLS_OPT_PEER_NAME)",style="rounded,filled"];
    srv_peer_cert [label="setsockopt(TLS_OPT_PEER_CERT)",style="rounded,filled"];
    srv_root_cert [label="setsockopt(TLS_OPT_ROOT_CERT)",style="rounded,filled"];

    "bind()" -> "listen()";

    "listen()" -> "accept()";
    "accept()" -> "accept()" [label=" main loop "];
    "accept()" -> srv_self_cert [label=" new connection "];

    "listen()" -> "accept4()";
    "accept4()" -> "accept4()" [label=" main loop "];
    "accept4()" -> srv_self_cert [label=" new connection "];

    srv_self_cert -> srv_self_cert [label=SNI, style=dashed];

    srv_self_cert -> srv_root_cert;
    srv_self_cert -> srv_peer_cert;
    srv_root_cert -> srv_peer_name;
  }

  subgraph cluster_clt {
    label=Client;

    clt_peer_name [label="setsockopt(TLS_OPT_PEER_NAME)"];
    clt_peer_cert [label="setsockopt(TLS_OPT_PEER_CERT)"];
    clt_self_cert [label="setsockopt(TLS_OPT_SELF_CERT)",style="rounded,filled"];
    clt_root_cert [label="setsockopt(TLS_OPT_ROOT_CERT)",style="rounded,filled"];

    "connect()" -> clt_peer_cert;
    clt_peer_cert -> clt_self_cert;

    "connect()" -> clt_peer_name;
    clt_peer_name -> clt_self_cert;

    clt_self_cert -> clt_root_cert
  }

  "socket(PROT_TLS)" -> "bind()";
  "socket(PROT_TLS)" -> "connect()";

  srv_peer_cert -> "setsockopt(TLS_OPT_HANDSHAKE)";
  srv_peer_name -> "setsockopt(TLS_OPT_HANDSHAKE)";
  clt_root_cert -> "setsockopt(TLS_OPT_HANDSHAKE)";

  "setsockopt(TLS_OPT_HANDSHAKE)" -> "send()" [lhead=cluster_io];

  "send()" -> "getsockopt(TLS_OPT_SELF_NAME)" [ltail=cluster_io,lhead=cluster_info];

  "getsockopt(TLS_OPT_SELF_CERT)" -> "close()" [ltail=cluster_info];
}